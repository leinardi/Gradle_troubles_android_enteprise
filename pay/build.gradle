apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.fernandocejas.frodo'
apply from: '../jacoco-unit-tests.gradle'


apply plugin: 'spoon'
//noinspection GroovyMissingReturnStatement -------
spoon {
    debug = true;
    adbTimeout = 10 // 10 seconds
    if (project.hasProperty('spoonClassName')) {
        className = project.spoonClassName
    }
    ignoreFailures = true
    debug = true
    noAnimations = false
    codeCoverage = false
    // To grant permissions to Android M >= devices */
    grantAllPermissions = true

}
// Adding a version number to the libs will result  in not propagating version number to tracking and debug screen
//ext.payVersionMajor = 1 // at most 31
//ext.payVersionMinor = 0 // at most 63
//ext.payVersionPatch = 0 // at most 63
//ext.payVersionBuild = 0 // at most 16383

// we have 31 bits (unsigned) available, so that leaves us with
// 2^5 for versionMajor (0-31),
// 2^6 for versionMinor (0-63),
// 2^6 for versionPatch (0-63) and the remaining bits (2^14) for
// versionBuild (0-16383)
//ext.payVersionCode = ext.payVersionMajor << 26 | ext.payVersionMinor << 20 | ext.payVersionPatch << 14 | ext.payVersionBuild;
//ext.payVersionName = "${ext.payVersionMajor}.${ext.payVersionMinor}.${ext.payVersionPatch}"

android {

    compileOptions {
        sourceCompatibility versions.android.javaVersion
        targetCompatibility versions.android.javaVersion
    }

    publishNonDefault true
    compileSdkVersion versions.android.compileSdk
    buildToolsVersion versions.android.buildTools

    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion versions.android.minSdk
        targetSdkVersion versions.android.targetSdk

        buildConfigField "String", "BUILD_REVISION", "\"${revision}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "boolean", "IS_PRODUCTION", "${isProduction}"
        buildConfigField "boolean", "IS_BETA", "${isBeta}"
    }

    dexOptions {
        jumboMode true
        //noinspection GroovyAssignabilityCheck
        preDexLibraries preDexEnabled
        javaMaxHeapSize "4g"
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled false//debugTestCoverageEnabled
        }
        release {
            minifyEnabled false
        }
    }

    productFlavors {
        germany {
            //noinspection GroovyAssignabilityCheck
            versionName appVersionNameDE
            //noinspection GroovyAssignabilityCheck
            versionCode appVersionCodeDE
        }
    }

    lintOptions {
        //baseline file("lint/lint-baseline.xml")
        checkAllWarnings false
        warningsAsErrors false
        //disabling check until lint NPE is fixed
        //https://code.google.com/p/android/issues/detail?id=230238
        disable 'NewerVersionAvailable', 'LintBaseline'
        abortOnError false
    }

    //duplicate licences failes gradle build process @see https://code.google.com/p/android/issues/detail?id=61573#c14
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude '.readme'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
}

dependencies {
    compile project(path: ':core', configuration: isProduction ? 'germanyLive' : 'germanyRelease')

    annotationProcessor libraries.daggerCompiler
    compile libraries.dagger

    provided libraries.jsr250

    compile libraries.supportAppcompat
    compile libraries.supportAnnotations
    compile libraries.supportRecyclerview
    compile libraries.supportDesign
    compile libraries.supportGridlayout

    compile(libraries.validationKomensky) {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile libraries.eventbus

    compile libraries.nineoldandroids
    compile libraries.easing
    compile libraries.androidanimations


    testAnnotationProcessor libraries.daggerCompiler
    androidTestCompile libraries.dagger
    testCompile libraries.dagger
    testCompile libraries.junit
    testCompile libraries.robolectric
    testCompile libraries.robolectricShadowsCore
    testCompile libraries.robolectricShadowsSupportV4
    testCompile libraries.robolectricShadowsMultidex
    testCompile libraries.robolectricShadowsPlayServices
    testCompile libraries.robolectricShadowsHttpClient
    testCompile libraries.mockito
    retrolambdaConfig libraries.retrolambda
}
