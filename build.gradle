apply plugin: 'org.sonarqube'
// Top-level build file where you can add configuration options common to all sub-projects/modules
buildscript {
    ext.kotlin_version = '1.2.51'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://jitpack.io' }
        maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
    }

    dependencies {
        classpath 'com.google.gms:google-services:3.3.1'
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:3.0.0"
    }
    // use our modified version above.
    configurations {
        androidTestImplementation.exclude group: 'com.android.support', module: 'support-v4'
    }

}

ext {
    revision = getGitCommitHash()
    versionRevision = getGitCommitCount()

    logger.info("Revision ${revision}")
    logger.info("Version revision ${versionRevision}")

    appVersionCode = getVersionCode(ext.versionRevision)
    appVersionNameDE = "5.15.0"
    appVersionNameIT = "2.13.0"
    appVersionNameMX = "3.13.0"
    appVersionNameUS = "3.4.0"

    appVersionNameAT = "1.0.0"

    buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
    isJenkins = System.getenv("JENKINS_HOME") != null

    // override this with -PsendExternalPartners=true to inform external-testers about new version
    sendExternalPartners = project.hasProperty("sendExternalPartners") ? sendExternalPartners.toBoolean() : false
    // override this with -PisProduction=true to create publishable release builds
    isProduction = project.hasProperty("isProduction") ? isProduction.toBoolean() : false
    // override this with -PisBeta=true to enable debug screen in production build without environment switcher
    isBeta = project.hasProperty("isBeta") ? isBeta.toBoolean() : false
    // override this with -PisProximityActivated=true to create publishable release builds
    isProximityActivated = project.hasProperty("isProximityActivated") ? isProximityActivated.toBoolean() : true
    //for releases without proximity change this default value to false

    versions = [
            android: [
                    buildTools          : '27.0.3',
                    compileSdk          : 27,
                    javaVersion         : JavaVersion.VERSION_1_8,
                    minSdk              : 19,
                    targetSdk           : 27,
                    androidToolsForLint : '26.1.1'
            ],
            libs   : [
                    adition            : '35',
                    adjust             : '4.12.0',
                    taptargetview      : '1.11.0',
                    androidanimations  : '2.3',
                    androidMapsUtils   : '0.5',
                    androidArchitecture: '1.1.1',
                    androidRoom        : '1.1.0', // Keep 1.1.0 for saferoom support
                    saferoom           : '0.4.2',
                    espressoVersion    : "3.0.2",
                    espressoRunner     : "1.0.2",
                    butterknife        : '8.8.1',
                    checkstyle         : '8.7',
                    commonsCollections4: '4.1',
                    conceal            : '1.1.3',
                    confetti           : '1.1.1',
                    constraintLayout   : '1.1.0',
                    crashlytics        : '2.9.4',
                    cupboardTools      : '0.3.1',
                    sqlCipher          : '3.5.9',
                    dagger             : '2.16',
                    easing             : '2.1',
                    eventbus           : '2.4.0',
                    firebase           : '15.0.2',
                    playServices       : '15.0.1',
                    glide              : '4.5.0',
                    gson               : '2.8.2',
                    joda               : '2.9.9',
                    jodaConvert        : '1.9.2',
                    jsr250             : '1.0',
                    leakcanary         : '1.5.4',
                    libphonenumber     : '8.8.5',
                    lottie             : '2.5.1',
                    materialprogressbar: '1.4.2',
                    multidex           : '1.0.3',
                    okhttp3            : '3.9.1',
                    omniture           : '4.15.0',
                    pageindicatorview  : '0.2.0',
                    paybackProximity   : '3.0.0',
                    retrofit           : '2.3.0',
                    rxandroid2         : '2.0.2',
                    rxbinding          : '2.0.0',
                    rxjava2            : '2.1.0',
                    securePreferences  : '1.0',
                    speedDial          : '1.0.1',
                    support            : '27.1.1',
                    timber             : '4.7.0',
                    umtcore            : '0.78',
                    umtsdk             : '0.78',
                    umtnfc             : '1.5',
                    validationKomensky : '0.9.2',
                    zxing              : '3.3.0',

                    // Only for test
                    dexmaker           : '2.2.0',
                    junit              : '4.12',
                    mockito            : '2.3.0',
            ]
    ]

    configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex')) {
                details.useVersion versions.support
            }
        }
    }
}
allprojects {
    // prevent evil gradle children fork processes spawns from stealing focus
    tasks.withType(JavaForkOptions) {
        // Forked processes like GradleWorkerMain for tests won't steal focus!
        jvmArgs '-Djava.awt.headless=true'
    }

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url 'https://jitpack.io' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
    }

    apply plugin: 'idea'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

subprojects {
    tasks.withType(Test).all {
        ignoreFailures isJenkins
        systemProperty "run-under-test", "true"
    }
}

private static def getGitCommitCount() {
    try {
        return 'git rev-list --first-parent --count HEAD'.execute().text.trim() as Integer
    }
    catch (ignored) {
        return 0
    }
}

private static def getGitCommitHash() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    }
    catch (ignored) {
        return null
    }
}

private static def getVersionCode(rev) {
    //magic number bcs it was mistakenly changed to max code of DE and applied to all countries now we use it everywhere
    return 680040000 + rev
}

private def getVersionName(appVersionMajor, appVersionMinor, appVersionPatch) {
    return "${appVersionMajor}.${appVersionMinor}.${appVersionPatch}";
}
